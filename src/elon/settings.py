"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 4.1.5.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""
import os
import ast
from dotenv import load_dotenv
from pathlib import Path
from datetime import timedelta

load_dotenv()


def get_bool_from_env(name, default_value):
    value = os.getenv(name, default_value)
    try:
        return ast.literal_eval(value)
    except ValueError as e:
        return default_value


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv('SECRET_KEY', '11')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = get_bool_from_env("DEBUG", True)

ALLOWED_HOSTS = ['*']

# Application definition

INSTALLED_APPS = [
    'rest_framework',
    'rest_framework_simplejwt',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'mptt',
    'versatileimagefield',

    "drf_yasg",

    "elon.eav",
    "elon.geo",
    "elon.users",
    "elon.ads",
    'elon.files',
    'elon.tg',
    'elon.payment'

]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'elon.urls'
AUTH_USER_MODEL = "users.User"

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    )
}
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'elon.wsgi.application'

# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases
DATABASES = {
    "default": {
        "ENGINE": os.getenv("DB_ENGINE", "django.db.backends.sqlite3"),
        "NAME": os.getenv("DB_NAME", BASE_DIR / "db.sqlite3"),
        "USER": os.getenv("DB_USER", ""),
        "PASSWORD": os.getenv("DB_PASSWORD", ""),
        "HOST": os.getenv("DB_HOST", ""),
        "PORT": os.getenv("DB_PORT", "")
    }
}

# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/
from django.utils.translation import gettext_lazy as _

LANGUAGE_CODE = 'uz'

LANGUAGES = (
    ('ru', _('Russian')),
    ('uz', _('Uzbek')),
)

TIME_ZONE = 'Asia/Tashkent'

USE_I18N = True

LOCALE_PATHS = (
    os.path.join(BASE_DIR, 'locale/'),
)

USE_L10N = False

USE_TZ = False

CSRF_TRUSTED_ORIGINS = ['https://******.uz','https://127.0.0.1']

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/


SIMPLE_JWT = {
    'AUTH_HEADER_TYPES': ('JWT',),
    'ACCESS_TOKEN_LIFETIME': timedelta(days=3),
    'REFRESH_TOKEN_LIFETIME': timedelta(days=3),
    'ROTATE_REFRESH_TOKENS': True,
    'BLACKLIST_AFTER_ROTATION': True
}
STATIC_URL = '/static/'

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
]

STATIC_ROOT = BASE_DIR.parent.joinpath('static_root')

MEDIA_ROOT = os.path.join(BASE_DIR.parent, 'media')

MEDIA_URL = '/media/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

PER_PAGE = int(os.getenv('PER_PAGE', 16))

MEDIA_HOST = os.getenv('MEDIA_HOST', "http://127.0.0.1:8000/")
BOT_TOKEN = os.getenv("BOT_TOKEN", "")


CLICK_SERVICE_ID = os.getenv("CLICK_SERVICE_ID", '19705')
CLICK_MERCHANT_ID = os.getenv("CLICK_MERCHANT_ID", '12881')
CLICK_SECRET_KEY = os.getenv("CLICK_SECRET_KEY", 'z1Ry9vq7VwihvJ3')
CLICK_MERCHANT_USER_ID = os.getenv("CLICK_MERCHANT_USER_ID", '22594')

PAYME_MERCHANT_ID = os.getenv("PAYME_MERCHANT_ID", '61b4aebd204c85a50a880106')
PAYME_KEY = os.getenv("PAYME_KEY", 'bUztrQX7?qY&vNr5s2?ds&5VOudD5@I%iZX1')
PAYME_TEST_KEY = os.getenv("PAYME_TEST_KEY", 'u5SOjOMQBey09TfE8rRfKsmoKNGYP9IhpdFS')

PAYNET_USERNAME = os.getenv("PAYNET_USERNAME", 'ProNeo')
PAYNET_PASSWORD = os.getenv("PAYNET_PASSWORD", 'ProNeo')
PAYNET_SERVICE_ID = os.getenv("PAYNET_SERVICE_ID", '6209')